{"version":3,"sources":["ListItem.tsx","shuffle.tsx","Map.tsx","Geolocated/Map.tsx","Geolocated/Geolocated.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ListItem","props","label","shuffle","_a","a","i","length","j","Math","floor","random","DEFAULT_FILL","WRONG_FILL","CORRECT_FILL","Map","useState","missed","setMissed","neighbToFind","setNeighb","data","features","map","d","properties","name","allNeighbs","setAllNeighbs","selected","setSelected","rootRef","useMemo","createRef","svg","useRef","tooltipRef","applyMouseover","useCallback","el","text","on","current","style","top","event","pageY","left","pageX","visibility","innerHTML","removeMouseover","removeTooltips","d3","each","this","resetBoard","newArrangement","slice","startGame","nextNeighb","score","round","alert","skip","concat","useEffect","filter","includes","dd","misses","selectAll","eventHandler","useLayoutEffect","ref","width","window","outerWidth","height","outerHeight","append","attr","projection","geoMercator","scale","translate","precision","path","geoPath","bounds","xScale","abs","yScale","transl","enter","id","margin","className","type","onClick","float","item","to","position","intersectingNeighbs","setIntersectingNeighbs","location","lat","lon","accuracy","neighb","centroid","clat","clon","select","circumference","PI","angle","circle","center","radius","circleCoords","coordinates","y","x","intersecting","feature","coords","geometry","polygonsIntersect","intersectingNeighb","join","update","PleaseEnableGeo","CurrentNeighb","GeolocationIsNotEnabled","Geo","geolocated","positionOptions","enableHighAccuracy","watchPosition","userDecisionTimeout","latitude","longitude","find","insidePolygon","toLatLon","isGeolocationEnabled","isGeolocationAvailable","href","target","rel","substr","replace","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.605649bf.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function ListItem(props: any) {\n  const { label } = props;\n  return (\n      <li>{label}</li>\n  )\n}","export default function shuffle(_a: string[]): string[] {\n  const a = [..._a]\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n","import * as d3 from 'd3';\nimport { Selection, event } from 'd3';\nimport { geoMercator, geoPath } from 'd3-geo';\nimport React, { useEffect, createRef, useState, useLayoutEffect, useRef, useMemo, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport data from './geojson.json';\nimport ListItem from './ListItem';\nimport shuffle from './shuffle';\n\nconst DEFAULT_FILL = 'rgb(175, 157, 150)';\nconst WRONG_FILL = 'red';\nconst CORRECT_FILL = 'green';\n\n/*\nState\n- missed          string[]  strings of missed guesses.\n- neighhbToFind   string    current string to find\n- allNeighbs      string[]  strings of unfound items\n- selected        string    unconfirmed current answer\n\nEvents\nstart\nend\nnew\nskip\n  selected: false\n  neighbToFind: new from allNeighbs\n  missed: unchanged\n\n\n*/\nexport default function Map(): JSX.Element {\n  const [missed, setMissed] = useState<string[]>([]);\n  const [neighbToFind, setNeighb] = useState<string>();\n  const [allNeighbs, setAllNeighbs] = useState<string[]>(shuffle(data.features.map((d) => d.properties.name)));\n  const [selected, setSelected] = useState<string>(\"\");\n  const rootRef = useMemo(() => createRef<HTMLDivElement>(), []);\n\n  let svg = useRef<Selection<SVGSVGElement, unknown, null, undefined>>();\n\n  const tooltipRef = useRef() as React.MutableRefObject<HTMLInputElement>;\n\n  const applyMouseover = useCallback((el: Selection<d3.BaseType, {}, null, undefined>, text: string | ((d: any) => string)) => {\n    return el.on(\"mousemove\", function(d: any){\n      if (tooltipRef.current) {\n        tooltipRef.current.style.top = (event.pageY-10)+\"px\";\n        tooltipRef.current.style.left = (event.pageX+10)+\"px\";\n        tooltipRef.current.style.visibility = 'visible';\n        tooltipRef.current.innerHTML = typeof text === 'function' ? text(d) : text;\n      }\n    })\n    .on(\"mouseout\", function(){\n      if (tooltipRef.current) {\n        tooltipRef.current.style.visibility = 'hidden';\n      }\n    });\n  },[tooltipRef]);\n\n  const removeMouseover = useCallback((el: Selection<d3.BaseType, {}, null, undefined>) => {\n    return el.on(\"mousemove\", null).on(\"mouseout\", null);\n  },[])\n\n  const removeTooltips = useCallback(function removeTooltips() {\n    d3.selectAll('svg path')\n      .each(function(this: any) { removeMouseover(d3.select(this))});\n  }, [removeMouseover]);\n\n  const resetBoard = useCallback(function resetBoard() {\n    const newArrangement = shuffle(data.features.map((d) => d.properties.name))\n    setAllNeighbs(newArrangement.slice(1));\n    setNeighb(newArrangement[0])\n    setMissed([]);\n\n    d3.selectAll('svg path').style(\"fill\", DEFAULT_FILL).style(\"stroke\", \"#ffffff\");\n    removeTooltips()\n  }, [removeTooltips, setNeighb, setAllNeighbs])\n\n  function startGame() {\n    resetBoard();\n  }\n\n  const nextNeighb = useCallback(function nextNeighb() {\n    setNeighb(allNeighbs[0]);\n    setAllNeighbs(allNeighbs.slice(1));\n    if (allNeighbs.length === 0) {\n      const score = Math.round((1-(missed.length/data.features.length))*100*100) / 100;\n      alert(`game done. Score ${score}% correct`);\n    }\n  }, [allNeighbs, missed.length])\n\n  function skip() {\n    if (neighbToFind) {\n      setNeighb(allNeighbs[0]);\n      setAllNeighbs(allNeighbs.slice(1).concat(neighbToFind));\n    }\n  }\n\n  useEffect(\n    () => {\n      if (!selected) {\n        return;\n      }\n\n      d3.selectAll('svg path').filter((d: any) => d.properties.name === selected)\n        .style('fill', '#FFEB3B');\n      return () => {\n        d3.selectAll('svg path').filter((d: any) => d.properties.name === selected)\n        .style('fill', function(d: any) {\n          if (allNeighbs.includes(d.properties.name)) {\n            return DEFAULT_FILL;\n          }\n          else if (missed.includes(d.properties.name)) {\n            return WRONG_FILL;\n          }\n          return CORRECT_FILL;\n        })}\n    },\n    [selected, allNeighbs, missed]\n  );\n\n  useEffect(\n    () => {\n      if (!neighbToFind) {\n        return;\n      }\n\n      function eventHandler(this: any, d: any) {\n        if (!neighbToFind) {\n          return\n        }\n        if (d.properties.name !== selected) {\n          return setSelected(d.properties.name);\n        }\n        else if (d.properties.name === neighbToFind) {\n          d3.selectAll('svg path').filter((dd: any) => d.properties.name === dd.properties.name)\n            .each(function(el: any){\n              d3.select(this).style('fill', CORRECT_FILL).style('opacity', 1);\n              applyMouseover(d3.select(this), el.properties.name);\n            })\n        } else {\n          d3.selectAll('svg path').filter((dd: any) => neighbToFind === dd.properties.name)\n            .each(function(el: any){\n              d3.select(this).style('fill', WRONG_FILL).style('opacity', 1)\n              applyMouseover(d3.select(this), el.properties.name);\n            })\n          setMissed((misses) => misses.concat(neighbToFind));\n        }\n        if (svg.current) {\n          svg.current.selectAll('path').on('mouseover', function() {\n            d3.select(this).style('opacity', 0.5);\n          });\n        }\n        setSelected(\"\");\n        nextNeighb();\n      }\n\n      d3.selectAll('path')\n        .on('click', (d: any) => [...allNeighbs, neighbToFind].includes(d.properties.name) ? eventHandler(d) : null );\n    },\n    [neighbToFind, nextNeighb, allNeighbs, selected, tooltipRef, applyMouseover]\n  )\n\n  useLayoutEffect(\n    () => {\n      \n      const ref = rootRef.current;\n      if (!ref) {\n        return;\n      }\n\n      const width = window.outerWidth;\n      const height = window.outerHeight - 200;\n      svg.current = d3.select(ref).append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n\n      const projection = geoMercator().scale(1).translate([0, 0]).precision(0);\n      const path = geoPath().projection(projection);\n      const bounds = path.bounds(data as any);\n\n      const xScale = width / Math.abs(bounds[1][0] - bounds[0][0]);\n      const yScale = height / Math.abs(bounds[1][1] - bounds[0][1]);\n      const scale = xScale < yScale ? xScale : yScale;\n\n      const transl: [number, number] = [(width - scale * (bounds[1][0] + bounds[0][0])) / 2, (height - scale * (bounds[1][1] + bounds[0][1])) / 2];\n      projection.scale(scale).translate(transl);\n\n      svg.current.selectAll(\"path\")\n        .data(data.features)\n        .enter()\n        .append(\"path\")\n        .attr(\"d\", path as any)\n        .attr('data-id', (d: any) => d.id)\n        .attr('data-name', (d: { properties: { name: string; }; }) => d.properties.name)\n        .attr('id', (d: { properties: { name: string; }; }) => d.properties.name)\n        .attr('pointer-events', 'all')\n        .style(\"fill\", DEFAULT_FILL).style(\"stroke\", \"#ffffff\");\n\n      svg.current.selectAll('path').on('mouseover', function() {\n        d3.select(this).style('opacity', 0.5);\n      });\n      svg.current.selectAll('path').on('touchend', function() {\n        d3.select(this).style('opacity', 1);\n      });\n      svg.current.selectAll('path').on('mouseleave', function() {\n        d3.select(this).style('opacity', 1);\n      });\n    },\n    [rootRef]\n  );\n\n  const GameMode = () => (\n    <div className=\"pure-u-1 pure-u-md-1-3\">\n      <button type=\"button\" onClick={startGame} id=\"start-game-btn\">Start New Game</button>\n      { neighbToFind && <div>\n        <div><p>Can you find and click on {neighbToFind}?</p></div>\n        <div><button type=\"button\" onClick={skip}>Skip and come back later</button></div>\n        </div>}\n        {selected && <span>Tap again to confirm</span>}\n    </div>\n  )\n\n  const BottomRow = () => (\n    <div className=\"pure-u-1 pure-u-md-1-3\">\n      <span>Having trouble? <Link to={'/location'}>Quit the quiz and learn the neighbs</Link></span>\n    </div>\n  )\n\n  return (\n    <div>\n\n      <div style={{margin: 'auto auto'}} className=\"pure-g\">\n        <div className=\"pure-u-1 pure-u-md-1-3\">\n          <GameMode />\n        </div>\n        <div ref={rootRef} className=\"pure-u-1\"/>\n        <aside style={{float: 'right'}} className=\"pure-u-1 ure-u-md-1-2\">\n            <h4>Missed Neighborhoods</h4>\n            {missed.map((item) => (<ListItem label={item}/>))}\n        </aside>\n        <BottomRow />\n      </div>\n      <div id=\"tooltip\" ref={tooltipRef} style={{position: 'absolute', 'zIndex': 10, visibility: 'hidden'}}></div>\n    </div>\n  );\n}\n","import * as d3 from 'd3';\nimport { Selection } from 'd3';\nimport { geoMercator, geoPath } from 'd3-geo';\nimport React, { createRef, useLayoutEffect, useRef, useMemo, useState } from 'react';\nimport data from '../geojson.json';\nimport polygonsIntersect from 'polygons-intersect';\n\nconst DEFAULT_FILL = 'rgb(175, 157, 150)';\n\ninterface IProps {\n  location: {\n    lat?: number, \n    lon?: number,\n    accuracy?: number,\n  },\n  neighb?: string\n}\n\nexport default function Map(props: IProps): JSX.Element {\n  const rootRef = useMemo(() => createRef<HTMLDivElement>(), []);\n  let svg = useRef<Selection<SVGSVGElement, unknown, null, undefined>>();\n\n  const tooltipRef = useRef() as React.MutableRefObject<Selection<SVGTextElement, any, null, undefined>>;\n  const [intersectingNeighbs, setIntersectingNeighbs] = useState<string[]>([]);\n\n  const { location: { lat, lon, accuracy }, neighb } = props;\n\n  const projection = useMemo(\n    () => geoMercator().scale(1).translate([0, 0]).precision(0),\n    []\n  );\n\n  useLayoutEffect(\n    () => {\n      \n      const ref = rootRef.current;\n      if (!ref) {\n        return;\n      }\n\n      const width = window.outerWidth;\n      const height = window.outerHeight * 0.85 - 100;\n      svg.current = d3.select(ref).append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n\n      const path = geoPath().projection(projection);\n      const bounds = path.bounds(data as any);\n\n      const xScale = width / Math.abs(bounds[1][0] - bounds[0][0]);\n      const yScale = height / Math.abs(bounds[1][1] - bounds[0][1]);\n      const scale = xScale < yScale ? xScale : yScale;\n\n      const transl: [number, number] = [(width - scale * (bounds[1][0] + bounds[0][0])) / 2, (height - scale * (bounds[1][1] + bounds[0][1])) / 2];\n      projection.scale(scale).translate(transl);\n\n      svg.current.selectAll(\"path\")\n        .data(data.features)\n        .enter()\n        .append(\"path\")\n        .attr('class', 'neighb')\n        .attr(\"d\", path as any)\n        .attr('data-id', (d: any) => d.id)\n        .attr('data-name', (d: { properties: { name: string; }; }) => d.properties.name)\n        .attr('id', (d: { properties: { name: string; }; }) => d.properties.name)\n        .attr('pointer-events', 'all')\n        .style(\"fill\", DEFAULT_FILL).style(\"stroke\", \"#ffffff\")\n        .on(\"mousemove\", function(d: any){\n          if (!tooltipRef.current && svg.current) {\n            tooltipRef.current = svg.current.append('text')\n          }\n          const [clat, clon] = path.centroid(d)\n          if (svg.current) {\n            svg.current.select('text')\n              .attr('y', clon)\n              .attr('x', clat)\n              .text(d.properties.name)\n              .attr('text-anchor', 'middle')\n              .attr('pointer-events', 'none')\n          }\n        })\n        .on(\"mouseout\", function(){\n          if (tooltipRef.current && svg.current) {\n            svg.current.select('text').text('')\n          }\n        });\n\n      svg.current.selectAll('path').on('mouseover', function() {\n        d3.select(this).style('opacity', 0.5);\n      });\n      svg.current.selectAll('path').on('touchend', function() {\n        d3.select(this).style('opacity', 1);\n      });\n      svg.current.selectAll('path').on('mouseleave', function() {\n        d3.select(this).style('opacity', 1);\n      });\n      d3.select(\"svg\").attr(\"align\",\"center\")\n    },\n    [projection, rootRef, tooltipRef]\n  );\n\n  useLayoutEffect(() => {\n    if (svg.current && lat && lon && accuracy) {\n      const circumference = 6371000 * Math.PI * 2;\n\n      const angle = accuracy / circumference * 360;\n\n      const circle = d3.geoCircle().center([lon, lat]).radius(angle);\n      const path = geoPath().projection(projection);\n\n      const circleCoords = circle().coordinates[0].map(([y, x]) => ({ x, y }))\n      const intersecting = data.features.filter((feature) => {\n        const coords = feature.geometry.coordinates[0][0].map(([y, x]: number[]) => ({ y, x }))\n        const out = polygonsIntersect(coords, circleCoords)\n\n        return out.length;\n      })\n\n      if (intersecting.length) {\n        setIntersectingNeighbs(intersecting\n          .map((feature) => feature.properties.name)\n          .filter((intersectingNeighb) => intersectingNeighb !== neighb));\n      }\n\n      svg.current.selectAll('path.location')\n        .data([lon, lat])\n        .join(\n          (enter) => enter\n            .append(\"path\")\n            .attr('class', 'location')\n            .attr(\"d\", path(circle()) || 2)\n            .attr(\"fill\",\"red\"),\n          (update) => update\n            .attr('d', path(circle()) || 2)\n        );\n    }\n\n  }, [accuracy, lat, lon, neighb, projection])\n\n  return (\n    <div style={{margin: 'auto auto'}}>\n      {!!intersectingNeighbs.length && <span>Given GPS accuracy, you may also be within {\n      intersectingNeighbs.length > 1\n        ? intersectingNeighbs.slice(0, -1).join(', ') + ' or ' + intersectingNeighbs.slice(-1)\n        : intersectingNeighbs[0]\n      }</span>}\n      <div ref={rootRef}/>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {geolocated, GeolocatedProps } from 'react-geolocated';\nimport { insidePolygon, toLatLon } from 'geolocation-utils';\nimport data from '../data.json';\nimport Map from './Map';\n\nfunction PleaseEnableGeo() {\n  return <div>\n    <span>Please enable geolocation to find your location in the city.</span>\n  </div>\n}\n\nfunction CurrentNeighb({ neighb }: { neighb: string }) {\n  return <div>\n    <span>Current neighborhood {neighb}</span>\n  </div>\n}\n\nfunction GeolocationIsNotEnabled() {\n  return (<div>\n    <span>Geolocation is not available.</span>\n  </div>)\n}\n\nfunction Geolocated(props: GeolocatedProps) {\n  const [neighb, setNeighb] = useState<string>();\n  const { latitude: lat, longitude: lon, accuracy } = props.coords || {};\n  useEffect(\n    () => {\n      if (lat && lon) {\n        const neighb = data.find((d) => insidePolygon(\n          toLatLon({lat, lon}), \n          d['the_geom'].map(([lat, lon]) => ({ lat, lon })))\n        );\n        if (neighb) {\n          setNeighb(neighb.name);\n        }\n      }\n    },\n    [lat, lon]\n  );\n  const { isGeolocationEnabled, isGeolocationAvailable } = props;\n  return (\n    <div>\n      { !isGeolocationEnabled && <PleaseEnableGeo />}\n      { !isGeolocationAvailable && <GeolocationIsNotEnabled />}\n      { neighb && <CurrentNeighb neighb={neighb} />}\n      <Map location={{lat, lon, accuracy}} neighb={neighb} />\n      <div>\n        <span>Think you know SF well?  <Link to=\"/quiz\">Take our neighborhood quiz</Link></span>\n      </div>\n      <hr/>\n        <details className=\"credits\">\n          <summary>About</summary>\n          <div>\n            <p>This page will determine which neighborhood of San Francisco you are currently in.  You'll need to be in the city boundaries of San Francisco for this page to be useful for you. If you're not, you can still test your knowledge of the 117 neighborhoods in San Francisco on the <a href=\"/#/quiz\">quiz page</a></p>\n            <p>No APIs were harmed in the making of this app. Your location is used solely to determine where you are in the city. Your location data never leaves your browser, and is never shared with anyone, period. Your visit is logged to Google Analytics, simply so I can know how popular this app gets, if it ever does.</p>\n            <a href='https://github.com/codeocelot/neighbs-quiz'>Github Repo</a>\n            <section>\n              <h3>Credits</h3>\n              <p>There are many unsung heros who publish their hard work with little recognition and without this project would never exist. Among them:</p>\n              <ul>\n                <li>The City of San Francisco, and in particular, the lovely folks at <a href=\"https://datasf.org/opendata/\">DataSF</a> for publishing a <a href=\"https://data.sfgov.org/Geographic-Locations-and-Boundaries/SF-Find-Neighborhoods/pty2-tcw4\">list</a> of neighborhood boundaries.</li>\n                <li><a href=\"https://github.com/d3/d3\">d3</a></li>\n                <li><a target=\"blank\" rel=\"noreferrer noopener\" href=\"https://bitbucket.org/teqplay/geolocation-utils#readme\">geolocation-utils</a></li>\n                <li><a target=\"blank\" rel=\"noreferrer noopener\" href=\"https://github.com/no23reason/react-geolocated\">react-geolocated</a></li>\n                <li><a target=\"blank\" rel=\"noreferrer noopener\" href=\"https://github.com/DudaGod/polygons-intersect#readme\">polygons-intersect</a></li>\n              </ul>\n            </section>\n          </div>\n        </details>\n\n    </div>\n  );\n}\n\n\nconst Geo = geolocated({\n  positionOptions: {\n    enableHighAccuracy: true,\n  },\n  watchPosition: true,\n  userDecisionTimeout: 5000,\n})(Geolocated);\n\n\nexport default Geo\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport './App.scss';\nimport 'purecss';\nimport Map from './Map';\nimport Geolocated from './Geolocated/Geolocated';\n\nif (process.env.NODE_ENV === 'production') {\n  if(window.location.href.substr(0,5) !== 'https'){\n    window.location.href = window.location.href.replace('http', 'https');\n  }\n}\n\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"wrapper\">\n          <Switch>\n            <Route path=\"/location\">\n              <Geolocated />\n            </Route>\n            <Route path=\"/quiz\">\n              <Map />\n            </Route>\n            <Route>\n              <Redirect to=\"/location\" />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}